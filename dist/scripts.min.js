let pokemonRepository = (function () {
	let e = [],
		t = 'https://pokeapi.co/api/v2/pokemon/?limit=120',
		n = document.querySelector('#modal-container');
	function i(t) {
		'object' == typeof t ? e.push(t) : console.log('Please input an Object data type with the required properties!!!');
	}
	function o(e) {
		l(e).then(function () {
			!(function (e) {
				n.innerHTML = '';
				let t = document.createElement('div');
				t.classList.add('modal');
				let i = document.createElement('button');
				i.classList.add('modal-close'), (i.innerText = 'Close'), i.addEventListener('click', a);
				let o = document.createElement('h1');
				(o.innerText = e.name), o.classList.add('text-transform');
				let l = document.createElement('img');
				l.classList.add('modal-img'), (l.src = e.imageUrl);
				let r = e.name[0].toUpperCase().concat(e.name.slice(1)),
					s = e.types.join(', and '),
					c = e.abilities.join(', and '),
					d = document.createElement('p');
				(d.innerText = `${r} is a Pokemon of type[s]: ${s} and has a height of ${(function () {
					(heightFromApi = e.height.toString()),
						heightFromApi.length < 2
							? (heightFromApi = '0.' + heightFromApi)
							: (heightFromApi = heightFromApi[0] + '.' + heightFromApi[1]);
					return heightFromApi;
				})()} meters. Its abilities are: ${c}.`),
					t.appendChild(i),
					t.appendChild(o),
					t.appendChild(l),
					t.appendChild(d),
					n.appendChild(t),
					n.classList.add('is-visible');
			})(e);
		});
	}
	function a() {
		n.classList.remove('is-visible');
	}
	function l(e) {
		let t = e.detailsUrl;
		return fetch(t)
			.then(function (e) {
				return e.json();
			})
			.then(function (t) {
				(e.imageUrl = t.sprites.other.dream_world.front_default),
					(e.imageUrlAnimation = t.sprites.versions['generation-v']['black-white'].animated.front_default),
					(e.height = t.height),
					(e.types = []),
					t.types.forEach(function (t) {
						e.types.push(t.type.name);
					}),
					(e.abilities = []),
					t.abilities.forEach(function (t) {
						e.abilities.push(t.ability.name);
					});
			})
			.catch(function (e) {
				console.error(e);
			});
	}
	return (
		window.addEventListener('keydown', (e) => {
			'Escape' === e.key && n.classList.contains('is-visible') && a();
		}),
		n.addEventListener('click', (e) => {
			e.target === n && a();
		}),
		{
			add: i,
			getAll: function () {
				return e;
			},
			findByName: function (t) {
				let n = e.filter((e) => e.name === t);
				return 0 === n.length ? `There is no such pokemon by the name of ${t} in this repository!` : n;
			},
			addListItem: function (e) {
				pokemonRepository.loadDetails(e).then(function () {
					let t = document.querySelector('.pokemon-list'),
						n = document.createElement('li');
					n.classList.add('list-item');
					let i = document.createElement('button');
					(i.innerText = e.name), i.classList.add('button-template');
					let a = document.createElement('img');
					a.setAttribute('src', e.imageUrlAnimation),
						a.classList.add('button-image'),
						n.appendChild(a),
						n.appendChild(i),
						t.appendChild(n),
						i.addEventListener('click', function (t) {
							o(e);
						});
				});
			},
			showDetails: o,
			loadList: function () {
				return fetch(t)
					.then(function (e) {
						return e.json();
					})
					.then(function (e) {
						e.results.forEach(function (e) {
							i({ name: e.name, detailsUrl: e.url });
						});
					})
					.catch(function (e) {
						console.error(e);
					});
			},
			loadDetails: l,
		}
	);
})();
function searchByName() {
	let e, t, n, o, a, l;
	for (
		t = (e = document.getElementById('myInput')).value.toUpperCase(),
			o = (n = document.getElementById('myUL')).querySelectorAll('.list-item'),
			i = 0;
		i < o.length;
		i++
	)
		(l = (a = o[i].getElementsByTagName('button')[0]).textContent || a.innerText).toUpperCase().indexOf(t) > -1
			? (o[i].style.display = '')
			: (o[i].style.display = 'none');
}
pokemonRepository.loadList().then(function () {
	pokemonRepository.getAll().forEach(function (e) {
		pokemonRepository.addListItem(e);
	});
});
let input = document.getElementById('myInput');
function clearSearchBox() {
	(input.value = ''), input.dispatchEvent(new KeyboardEvent('keyup'));
}
input.addEventListener('keyup', searchByName);
let clearSearchButton = document.getElementById('clear-search');
clearSearchButton.addEventListener('click', clearSearchBox);
